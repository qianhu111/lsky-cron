name: Check & Restore Crontabs for Multiple Accounts

on:
  schedule:
    - cron: "*/10 * * * *"  # 每 10 分钟执行
  workflow_dispatch:

jobs:
  cron-monitor:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y jq sshpass

      - name: 解析服务器信息并执行保活脚本
        env:
          TARGETS_JSON: ${{ secrets.TARGETS_JSON }}
        run: |
          # 写入到临时 JSON 文件
          echo "$TARGETS_JSON" > targets.json

          # 检查 JSON 是否有效
          if ! jq empty targets.json; then
            echo "❌ 无法解析 TARGETS_JSON"
            cat targets.json
            exit 1
          fi

          count=$(jq length targets.json)
          echo "共读取到 $count 个目标服务器"

          for i in $(seq 0 $((count - 1))); do
            name=$(jq -r ".[$i].name" targets.json)
            ip=$(jq -r ".[$i].ip" targets.json)
            port=$(jq -r ".[$i].port" targets.json)
            user=$(jq -r ".[$i].user" targets.json)
            pass=$(jq -r ".[$i].password" targets.json)
            path=$(jq -r ".[$i].path" targets.json)

            echo ">>> 正在处理 $name ($user@$ip:$port)"

            # 上传保活脚本
            sshpass -p "$pass" scp -P "$port" -o StrictHostKeyChecking=no scripts/check_cron.sh "$user@$ip:/tmp/check_cron.sh"
            if [ $? -ne 0 ]; then
              echo "❌ 上传脚本失败：$name"
              continue
            fi

            # 执行远程脚本
            sshpass -p "$pass" ssh -p "$port" -o StrictHostKeyChecking=no "$user@$ip" "bash /tmp/check_cron.sh '$path'"
            if [ $? -ne 0 ]; then
              echo "❌ 执行脚本失败：$name"
              continue
            fi

            echo "✅ $name 完成"
          done
